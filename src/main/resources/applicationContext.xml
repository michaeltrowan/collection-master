<!-- Storage API Spring Context file -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.3.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
                http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms.xsd">
                
	<!-- Introspection Engine Beans -->
	
	<!-- Introspection Engine Implementation -->
	<bean id="IntrospectionEngine" class="com.iwave.introspection.IntrospectionEngineImpl">
		<property name="storageArrayController"><ref bean="StorageArrayController"/></property>
	</bean>
	
	<!-- Storage Array Controller Implementation -->
	<bean id="StorageArrayController" class="com.iwave.introspection.storage.array.StorageArrayIntrospectionController">
		<!-- <property name="dao"><ref bean="IntrospectionDAO" /></property> -->
		<property name="saIntrospector"><ref bean="StorageArrayIntrospector" /></property>
	</bean>
	
	<!-- Storage Array Introspector Implementation -->
	<bean id="StorageArrayIntrospector" class="com.iwave.introspection.storage.array.StorageArrayIntrospector" />

	<!--  End Introspection Engine Beans -->

	<tx:advice id="introDaoTxAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="IntrospectionDAOOps"
			expression="execution(* com.iwave.storage.introspection.db.IntrospectionDAO.*(..))" />
		<aop:advisor advice-ref="introDaoTxAdvice" pointcut-ref="IntrospectionDAOOps" />
	</aop:config>		
	
	<aop:config>
		<aop:pointcut id="IntrospectionControllerOps"
			expression="execution(* com.iwave.introspection.storage.array.StorageArrayIntrospectionController.*(..))" />
		<aop:advisor advice-ref="introDaoTxAdvice" pointcut-ref="IntrospectionControllerOps" />
	</aop:config>		
	
	<bean id="IntrospectionDAO" class="com.iwave.storage.introspection.db.IntrospectionDAOImpl"/>
	
 	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>
	
	<bean id="atomikosTransactionManager"
		class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close">
		<property name="forceShutdown">
			<value>true</value>
		</property>
		<property name="transactionTimeout">
			<value>5000</value>
		</property>		
	</bean>

	<bean id="atomikosUserTransaction"
		class="com.atomikos.icatch.jta.UserTransactionImp"/>

	<bean id="transactionManager"
		class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="transactionManager">
			<ref bean="atomikosTransactionManager" />
		</property>
		<property name="userTransaction">
			<ref bean="atomikosUserTransaction" />
		</property>
	</bean>

	<bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />

	<bean id="emf"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		p:dataSource-ref="dataSource" p:jpaDialect-ref="jpaDialect"
		p:persistence-xml-location="META-INF/storagearray-persistence.xml"
		p:persistenceUnitName="storageArrayPU">
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
	</bean>
	
	<bean id="dataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean"
		init-method="init" destroy-method="close" p:uniqueResourceName="seeTest"
		p:xaDataSourceClassName="org.postgresql.xa.PGXADataSource"
		p:maxPoolSize="50" p:minPoolSize="50">
		<property name="xaProperties">
			<props>
				<prop key="user">isa</prop>
				<prop key="password">isa</prop>
				<prop key="serverName">localhost</prop>
				<prop key="portNumber">2345</prop>
				<prop key="databaseName">intro</prop>
			</props>
		</property>
	</bean>
	
 	<bean id="connectionFactory"
 			class="org.apache.activemq.ActiveMQConnectionFactory"
 			p:brokerURL="tcp://localhost:61616"/>
 	
 	<bean id="seeEventDestination" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="SEEEventDestination"/>
	</bean>

 	<bean id="seeRequestDestination" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="ExecutionRequests"/>
	</bean>
 
 	<bean id="seeRequestTemplate"
 			class="org.springframework.jms.core.JmsTemplate"
		 	p:connectionFactory-ref="connectionFactory"
		 	p:defaultDestination-ref="seeRequestDestination"/>

 	<bean id="seeEventTemplate"
 			class="org.springframework.jms.core.JmsTemplate"
		 	p:connectionFactory-ref="connectionFactory"
		 	p:defaultDestination-ref="seeEventDestination"/>
 
<!--	<bean id="eventListener" class="com.emc.client.web.event.SEEClient"/> -->

	<!-- The Spring message listener container configuration
	  <jms:listener-container
	      container-type="default"
	      connection-factory="connectionFactory"
	      acknowledge="auto">
	    <jms:listener destination="SEEEventDestination" ref="eventListener" method="onMessage" />
	  </jms:listener-container>
	  -->

</beans>
